>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

###### One paramenter is not a list ######
>>> matrix_mul("hello", [1, 2, 3])
Traceback (most recent call last):
TypeError: m_a must be a list

>>> matrix_mul([1, 2, 3], "hello")
Traceback (most recent call last):
TypeError: m_b must be a list

###### One element in a list is nor INT ######
>>> matrix_mul([1, 2, 3], [7, '3', 9] )
Traceback (most recent call last):
TypeError: m_a must be a list of lists

>>> matrix_mul([[1, 18], [3, 11]], [[7, 5], [9, '20']] )
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> matrix_mul([[1, 'h'], [3, 11]], [[7, 5], [9,20]] )
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> matrix_mul([[1, 18], [3, 11]], [7, 5, 9, 20] )
Traceback (most recent call last):
TypeError: m_b must be a list of lists

###### Normal Case ######
>>> matrix_mul([[1, 18], [3, 11]], [[7, 5], [9, 20]] )
[[169, 365], [120, 235]]


###### Missing argument ######
TypeError: m_b must be a list of lists
>>> matrix_mul([[1, 18], [3, 11]] )
Traceback (most recent call last):
TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

>>> matrix_mul([[]], [[7, 5], [9, 20]] )
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> matrix_mul([[1, 18], [3, 11]], [[]] )
Traceback (most recent call last):
ValueError: m_b can't be empty

###### Not same size ######
>>> matrix_mul([[1, 18], [3, 11]], [[7, 5], [9, 20, 30]] )
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size

>>> matrix_mul([[1, 18], [3, 11, 25]], [[7, 5], [9, 20]] )
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size

>>> matrix_mul([[1, 18, 80], [3, 11, 25]], [[7, 5], [9, 20]] )
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied
