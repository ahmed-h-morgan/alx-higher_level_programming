The ``100-matrix_mul`` module
======================

Using ``matrix_mul``
-------------------

This is an example text file in reStructuredText format. 
First
import ``matrix_mul`` from the ``100-matrix_mul`` module:

>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Now use it:

normal / base case
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

First argument is not a list
>>> matrix_mul("hello", [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: m_a must be a list

Second argument is not a list
>>> matrix_mul([[1, 2], [3, 4]], "hello")
Traceback (most recent call last):
    ...
TypeError: m_b must be a list

First argument is not a list of list
>>> matrix_mul([1, 2, 3, 4], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: m_a must be a list of lists

Second argument is not a list of list
>>> matrix_mul([[1, 2], [3, 4]], [1, 2, 3, 4])
Traceback (most recent call last):
    ...
TypeError: m_b must be a list of lists

First list is empty
>>> matrix_mul([], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
ValueError: m_a can't be empty

Second list is empty
>>> matrix_mul([[1, 2], [3, 4]], [])
Traceback (most recent call last):
    ...
ValueError: m_b can't be empty

First list of list is empty
>>> matrix_mul([[], [3, 4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
ValueError: m_a can't be empty

Second list of list is empty
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], []])
Traceback (most recent call last):
    ...
ValueError: m_b can't be empty

First element of a list is not int or float
>>> matrix_mul([[1, 2], ['3', 4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: m_a should contain only integers or floats

Second element of a list is not int or float
>>> matrix_mul([[1, 2], [3, 4]], [['1', 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: m_b should contain only integers or floats

First lists in different sizes
>>> matrix_mul([[1, 2], [4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: each row of m_a must be of the same size

Second lists in different sizes
>>> matrix_mul([[1, 2], [ 3, 4]], [[1, 2], [4]])
Traceback (most recent call last):
    ...
TypeError: each row of m_b must be of the same size

Missing 1 argument
>>> matrix_mul([[1, 2], [ 3, 4]],)
Traceback (most recent call last):
    ...
ValueError: m_a and m_b can't be multiplied

Missing 2 argument
>>> matrix_mul()
Traceback (most recent call last):
    ...
[[1]] 